{"version":3,"file":"static/js/134.a2c9f6a7.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.module.css","components/MoviesList/MoviesList.jsx","pages/Movies.jsx","services/fetchAPI.js","utils/keyAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {movies.map(movie => {\n        // if (!movie.title) {\n        //   console.log(movie)\n        //   return <li>not set</li>\n        // }\n        return (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title || movie.original_name }\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object),\n};","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchingMovies } from 'services/fetchAPI';\n\nconst Movies = () => {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query) {\n      const getSearchingMovies = async query => {\n        try {\n          const response = await fetchSearchingMovies(query);\n          const searchingMovies = response.data.results;\n          setSearchedMovies(searchingMovies);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      };\n      getSearchingMovies(query);\n    } else {\n      setSearchedMovies([]);\n    }\n  }, [query]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.elements.movie.value });\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" required name=\"movie\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {searchedMovies.length > 0 ? (\n        <MoviesList movies={searchedMovies} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Movies;","import { BASE_URL } from 'utils/keyAPI';\nimport { API_KEY } from 'utils/keyAPI';\nimport axios from 'axios';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/week?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchTMovie = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchTMoviesCast = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchTMoviesReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchSearchingMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};","export const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w300/';\nexport const IMG_URL_CAST = 'https://image.tmdb.org/t/p/w200/';\nexport const API_KEY = '536566c9dd222e8505bf9bc3c6757305';\n\n"],"names":["MoviesList","_ref","movies","location","useLocation","_jsx","className","css","children","map","movie","Link","to","concat","id","state","from","title","original_name","_useState","useState","_useState2","_slicedToArray","searchedMovies","setSearchedMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","useEffect","getSearchingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","searchingMovies","_context","prev","next","fetchSearchingMovies","sent","data","results","t0","console","error","stop","_x","apply","arguments","handleSubmit","_ref2","_callee2","e","_context2","preventDefault","target","elements","value","reset","_x2","_jsxs","onSubmit","type","required","name","length","fetchTrendingMovies","axios","BASE_URL","API_KEY","abrupt","log","message","fetchTMovie","fetchTMoviesCast","_ref3","_callee3","_context3","fetchTMoviesReviews","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4","IMG_URL","IMG_URL_CAST"],"sourceRoot":""}