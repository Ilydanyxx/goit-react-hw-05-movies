{"version":3,"file":"static/js/736.5bd3c43f.chunk.js","mappings":"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","sources":["pages/Reviews.jsx","services/fetchAPI.js","utils/keyAPI.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchTMoviesReviews } from 'services/fetchAPI';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    const getReviews = async movieId => {\n      try {\n        const response = await fetchTMoviesReviews(movieId);\n        const reviewsInfo = await response.data.results;\n        setReviews(reviewsInfo);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    getReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews ? (\n        reviews.length > 0 ? (\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h3>{review.author}</h3>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>We don't have any reviews for this movie.</p>\n        )\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;","import { BASE_URL } from 'utils/keyAPI';\nimport { API_KEY } from 'utils/keyAPI';\nimport axios from 'axios';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/week?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchTMovie = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchTMoviesCast = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchTMoviesReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchSearchingMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};","export const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w300/';\nexport const IMG_URL_CAST = 'https://image.tmdb.org/t/p/w200/';\nexport const API_KEY = '536566c9dd222e8505bf9bc3c6757305';\n\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","getReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","reviewsInfo","_context","prev","next","fetchTMoviesReviews","sent","data","results","t0","console","error","stop","_x","apply","arguments","_jsx","children","length","map","review","_jsxs","author","content","id","fetchTrendingMovies","axios","concat","BASE_URL","API_KEY","abrupt","log","message","fetchTMovie","_ref2","_callee2","_context2","fetchTMoviesCast","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","fetchSearchingMovies","_ref5","_callee5","query","_context5","_x4","IMG_URL","IMG_URL_CAST"],"sourceRoot":""}