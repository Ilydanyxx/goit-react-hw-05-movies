{"version":3,"file":"static/js/493.d8419586.chunk.js","mappings":"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","sources":["pages/Cast.jsx","services/fetchAPI.js","utils/keyAPI.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchTMoviesCast } from 'services/fetchAPI';\nimport { IMG_URL_CAST } from 'utils/keyAPI';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    const getCast = async movieId => {\n      try {\n        const response = await fetchTMoviesCast(movieId);\n        const castInfo = await response.data.cast;\n        setCast(castInfo);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    getCast(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      {' '}\n      {cast ? (\n        <ul>\n          {cast.map(actor => (\n            <li key={actor.id}>\n              {actor.profile_path ? (\n                <img src={`${IMG_URL_CAST}${actor.profile_path}`} alt=\"Actor\" />\n              ) : (\n                <p>Sorry, no image</p>\n              )}\n\n              <h3>{actor.name}</h3>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;","import { BASE_URL } from 'utils/keyAPI';\nimport { API_KEY } from 'utils/keyAPI';\nimport axios from 'axios';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/week?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchTMovie = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchTMoviesCast = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchTMoviesReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchSearchingMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error.message);\n  }\n};","export const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w300/';\nexport const IMG_URL_CAST = 'https://image.tmdb.org/t/p/w200/';\nexport const API_KEY = '536566c9dd222e8505bf9bc3c6757305';\n\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","getCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","castInfo","_context","prev","next","fetchTMoviesCast","sent","data","t0","console","error","stop","_x","apply","arguments","_jsxs","children","_jsx","map","actor","profile_path","src","concat","IMG_URL_CAST","alt","name","character","id","fetchTrendingMovies","axios","BASE_URL","API_KEY","abrupt","log","message","fetchTMovie","_ref2","_callee2","_context2","_ref3","_callee3","_context3","_x2","fetchTMoviesReviews","_ref4","_callee4","_context4","_x3","fetchSearchingMovies","_ref5","_callee5","query","_context5","_x4","IMG_URL"],"sourceRoot":""}